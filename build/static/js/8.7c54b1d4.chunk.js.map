{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/spinner/spinner.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["setContent","process","Component","newItemLoading","Error","ComicsList","useState","comics","setComics","setNewItemLoading","offset","setOffset","comicEnded","setComicEnded","useMarvelService","setProcess","getComics","useEffect","onRequest","initial","then","onComicsLoaded","newComics","length","concat","className","comicsList","map","comic","i","id","title","thumbnail","price","CSSTransition","timeout","classNames","to","src","alt","TransitionGroup","component","renderComics","disabled","style","onClick","ComicsPage","Helmet","name","content","AppBanner","ErrorBoundary","ErrorMessage","display","width","height","objectFit","margin","img","request","useCallback","url","a","method","body","headers","fetch","responce","ok","status","json","data","clearError","useHttp","_apiBase","_apiKey","_baseOffset","_transformCharacter","char","description","slice","path","extension","homepage","urls","wiki","items","_transformComic","pageCount","language","textObjects","prices","getAllCharacters","res","results","item","getCharacter","getCharacterByName","total","console","log","getComic","Spinner","xmlns","xmlnsXlink","background","shapeRendering","viewBox","preserveAspectRatio","cx","cy","fill","r","attributeName","repeatCount","dur","keyTimes","values","begin","calcMode","state","error","errorInfo","this","setState","props","children","avengers","avengersLogo"],"mappings":"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","file":"static/js/8.7c54b1d4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n   switch (process) {\r\n      case 'waiting':\r\n         return <Spinner />\r\n         break;\r\n      case 'loading':\r\n         return newItemLoading ? <Component /> : <Spinner />\r\n      case 'error':\r\n         return <ErrorMessage />\r\n      case 'confirmed':\r\n         return <Component />\r\n      default:\r\n         throw new Error('Unexpected process state')\r\n   }\r\n}\r\n\r\nconst ComicsList = () => {\r\n   const [comics, setComics] = useState([])\r\n   const [newItemLoading, setNewItemLoading] = useState(false);\r\n   const [offset, setOffset] = useState(400)\r\n   const [comicEnded, setComicEnded] = useState(false)\r\n\r\n\r\n   const { process, setProcess, getComics } = useMarvelService();\r\n\r\n   useEffect(() => {\r\n      onRequest(offset, true);\r\n   }, [])\r\n\r\n   const onRequest = (offset, initial) => {\r\n      initial ? setNewItemLoading(false) : setNewItemLoading(true)\r\n      getComics(offset)\r\n         .then(onComicsLoaded)\r\n         .then(() => setProcess('confirmed'))\r\n   }\r\n\r\n   const onComicsLoaded = (newComics) => {\r\n      if (newComics.length < 8) {\r\n         setComicEnded(true)\r\n      }\r\n\r\n      setNewItemLoading(false)\r\n      setComics(comics => comics.concat(newComics))\r\n      setOffset(offset => offset + 8)\r\n   }\r\n\r\n   const renderComics = (comics) => {\r\n      const comicsList = comics.map((comic, i) => {\r\n         const { id, title, thumbnail, price } = comic\r\n\r\n         return (\r\n            <CSSTransition\r\n               key={i}\r\n               timeout={400}\r\n               classNames=\"comics__item\">\r\n               <li className=\"comics__item\">\r\n                  <Link to={`/comics/${id}`}>\r\n                     <img src={thumbnail} alt=\"ultimate war\" className=\"comics__item-img\" />\r\n                     <div className=\"comics__item-name\">{title}</div>\r\n                     <div className=\"comics__item-price\">{price}</div>\r\n                  </Link>\r\n               </li>\r\n            </CSSTransition>\r\n\r\n         )\r\n      })\r\n      return (\r\n         <TransitionGroup component={'ul'} className=\"comics__grid\">\r\n            {comicsList}\r\n         </TransitionGroup>\r\n\r\n      )\r\n   }\r\n\r\n   return (\r\n      <div className=\"comics__list\">\r\n         {setContent(process, () => renderComics(comics), newItemLoading)}\r\n         <button className=\"button button__main button__long\"\r\n            disabled={newItemLoading}\r\n            style={{ \"display\": comicEnded ? \"none\" : 'block' }}\r\n            onClick={() => onRequest(offset, false)}>\r\n            <div className=\"inner\">load more</div>\r\n         </button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nconst ComicsPage = () => {\r\n   return (\r\n      <>\r\n         <Helmet>\r\n            <meta\r\n               name=\"description\"\r\n               content=\"All our comics store in here\"\r\n            />\r\n            <title>Comics Page</title>\r\n         </Helmet>\r\n         <AppBanner />\r\n         <ErrorBoundary>\r\n            <ComicsList />\r\n         </ErrorBoundary>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ComicsPage","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n   return (\r\n      <img style={{\r\n         display: 'block', width: \"250px\",\r\n         height: \"250px\", objectFit: 'contain',\r\n         margin: \"0 auto\"\r\n      }}\r\n         src={img} alt=\"Error Gif\" />\r\n   )\r\n}\r\n\r\nexport default ErrorMessage","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n   const { request, clearError, process, setProcess } = useHttp();\r\n\r\n   const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n   const _apiKey = 'apikey=6384ce9cf17f02f85ebfa13f965d5627';\r\n   const _baseOffset = 400;\r\n\r\n\r\n   const _transformCharacter = (char) => {\r\n      return {\r\n         id: char.id,\r\n         name: char.name,\r\n         description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n         thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n         homepage: char.urls[0].url,\r\n         wiki: char.urls[1].url,\r\n         comics: char.comics.items\r\n      }\r\n   }\r\n\r\n   const _transformComic = (comic) => {\r\n      return {\r\n         id: comic.id,\r\n         title: comic.title,\r\n         description: comic.description || 'There is no description',\r\n         pageCount: comic.pageCount ? `${comic.pageCount} p.` : 'No information about the number of pages',\r\n         language: comic.textObjects.language || 'en-us',\r\n         thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n         price: comic.prices.price ? `${comic.prices.price}$` : 'not available'\r\n      }\r\n   }\r\n\r\n   const getAllCharacters = async (offset = _baseOffset) => {\r\n      const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n      return res.data.results.map(item => _transformCharacter(item))\r\n   }\r\n\r\n   const getCharacter = async (id) => {\r\n      const res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n      return _transformCharacter(res.data.results[0]);\r\n   }\r\n\r\n   const getCharacterByName = async (char) => {\r\n      let res = await request(`${_apiBase}characters?name=${char}&${_apiKey}`)\r\n      if (!res.data.total) {\r\n         return res = ''\r\n      }\r\n      console.log(res)\r\n      return _transformCharacter(res.data.results[0]);\r\n   }\r\n\r\n   const getComics = async (offset = _baseOffset) => {\r\n      const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`)\r\n      return res.data.results.map(comic => _transformComic(comic))\r\n   }\r\n\r\n   const getComic = async (id) => {\r\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n      return _transformComic(res.data.results[0]);\r\n   }\r\n\r\n\r\n   return {\r\n      clearError,\r\n      process,\r\n      setProcess,\r\n      getAllCharacters,\r\n      getCharacter,\r\n      getComics,\r\n      getComic,\r\n      getCharacterByName,\r\n   }\r\n}\r\n\r\nexport default useMarvelService","import { useState, useCallback } from 'react'\r\n\r\nexport const useHttp = () => {\r\n\r\n   const [process, setProcess] = useState('waiting')\r\n\r\n   const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n      setProcess('loading')\r\n\r\n      try {\r\n         const responce = await fetch(url, { method, body, headers })\r\n         if (!responce.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${responce.status}`)\r\n         }\r\n         const data = await responce.json();\r\n\r\n         return data\r\n\r\n      } catch (e) {\r\n         setProcess('error')\r\n         throw (e);\r\n      }\r\n\r\n   }, [])\r\n\r\n   const clearError = useCallback(() => {\r\n      setProcess('loading')\r\n   }, [])\r\n\r\n   return { request, clearError, setProcess, process }\r\n}","const Spinner = () => {\r\n   return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" style={{ margin: '0 auto', background: 'rgb(255, 255, 255)', display: 'block', shapeRendering: 'auto', width: \"250px\", height: \"250px\" }} viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n         <circle cx=\"41\" cy=\"50\" fill=\"#000000\" r=\"9\">\r\n            <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1.1235955056179776s\" keyTimes=\"0;0.5;1\" values=\"41;59;41\" begin=\"-0.5617977528089888s\"></animate>\r\n         </circle>\r\n         <circle cx=\"59\" cy=\"50\" fill=\"#ff0000\" r=\"9\">\r\n            <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1.1235955056179776s\" keyTimes=\"0;0.5;1\" values=\"41;59;41\" begin=\"0s\"></animate>\r\n         </circle>\r\n         <circle cx=\"41\" cy=\"50\" fill=\"#000000\" r=\"9\">\r\n            <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1.1235955056179776s\" keyTimes=\"0;0.5;1\" values=\"41;59;41\" begin=\"-0.5617977528089888s\"></animate>\r\n            <animate attributeName=\"fill-opacity\" values=\"0;0;1;1\" calcMode=\"discrete\" keyTimes=\"0;0.499;0.5;1\" dur=\"1.1235955056179776s\" repeatCount=\"indefinite\"></animate>\r\n         </circle>\r\n      </svg>\r\n   )\r\n}\r\n\r\nexport default Spinner","import { Component } from \"react\";\r\n\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n   state = {\r\n      error: false\r\n   }\r\n\r\n   componentDidCatch(error, errorInfo) {\r\n      console.log(error, errorInfo)\r\n      this.setState({\r\n         error: true\r\n      })\r\n   }\r\n\r\n   render() {\r\n      if (this.state.error) {\r\n         return <ErrorMessage />\r\n      }\r\n      return this.props.children\r\n   }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n   return (\r\n      <div className=\"app__banner \" >\r\n         <img src={avengers} alt=\"Avengers\" />\r\n         <div className=\"app__banner-text mt-3\">\r\n            New comics every week!<br />\r\n            Stay tuned!\r\n         </div>\r\n         <img src={avengersLogo} alt=\"Avengers logo\" />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default AppBanner;"],"sourceRoot":""}